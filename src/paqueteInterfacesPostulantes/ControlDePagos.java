/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paqueteInterfacesPostulantes;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import paquetePersistencia.ConecBasePrueba;

/**
 *
 * @author Windows 11 Pro
 */
public class ControlDePagos extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ControlDePagos.class.getName());

    /**
     * Creates new form ControlDePagos
     */
    public ControlDePagos() {
        initComponents();
        tablaPostulantes.setModel(Postulantes());
        tablaPostulantes.getColumnModel().getColumn(1).setCellRenderer(new ColorRenderer()); // DocumentaciÃ³n
        tablaPostulantes.getColumnModel().getColumn(2).setCellRenderer(new ColorRenderer()); // Pago
        tablaPostulantes.setRowHeight(50);
        agregarPlaceholder(ingresarCI, "Ingresar CI");
        javax.swing.SwingUtilities.invokeLater(() -> {
        jPanel1.requestFocusInWindow();
        });
        tablaPostulantes.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 18));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPostulantes = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        ingresarCI = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnlBotonSolicitar = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        pnlBotonBuscar = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 57, 117));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Control de Pagos");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 420, 110));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(239, 184, 16));
        jLabel4.setText("Postulantes :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 180, 30));

        tablaPostulantes.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        tablaPostulantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Postulante", "Estadode Examen", "Estado de Pago"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPostulantes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 1120, 430));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 200, 10));

        ingresarCI.setBackground(new java.awt.Color(0, 57, 117));
        ingresarCI.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        ingresarCI.setForeground(new java.awt.Color(204, 204, 204));
        ingresarCI.setText("Cedula de Identidad");
        ingresarCI.setBorder(null);
        ingresarCI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarCIActionPerformed(evt);
            }
        });
        jPanel1.add(ingresarCI, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 150, 210, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(239, 184, 16));
        jLabel1.setText("Consultar :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 160, 140, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes de interfaces/ControlPago/campana1.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 680, 100, 100));

        pnlBotonSolicitar.setBackground(new java.awt.Color(183, 13, 30));
        pnlBotonSolicitar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlBotonSolicitarMouseClicked(evt);
            }
        });
        pnlBotonSolicitar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Solicitar Presencia");
        pnlBotonSolicitar.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 80));

        jPanel1.add(pnlBotonSolicitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 690, 200, 80));

        pnlBotonBuscar.setBackground(new java.awt.Color(183, 13, 30));
        pnlBotonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlBotonBuscarMouseClicked(evt);
            }
        });
        pnlBotonBuscar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Buscar");
        pnlBotonBuscar.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 50));

        jPanel1.add(pnlBotonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 150, 130, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1271, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingresarCIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarCIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresarCIActionPerformed

    private void pnlBotonSolicitarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBotonSolicitarMouseClicked
        int fila = tablaPostulantes.getSelectedRow();

        if (fila != -1) { // hay fila seleccionada
            // Cambiar el texto de la columna "Estado de Pago" (columna 2)
            tablaPostulantes.setValueAt("Pendiente", fila, 2);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un postulante primero.");
        }
    }//GEN-LAST:event_pnlBotonSolicitarMouseClicked

    private void pnlBotonBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBotonBuscarMouseClicked
          String ciBuscado = ingresarCI.getText().trim();
        if(ciBuscado.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un CI para buscar.");
            return;
        }

        try (Connection con = ConecBasePrueba.conectar()) {
            String sql = "SELECT CONCAT(u.Nombre,' ',u.Apellidos) AS NombreCompleto " +
                         "FROM usuario u " +
                         "WHERE u.Numero_CI = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, ciBuscado);
            ResultSet rs = pst.executeQuery();

            if(rs.next()) {
                String nombreCompleto = rs.getString("NombreCompleto");

                // Buscar el nombre completo en el JTable
                DefaultTableModel modelo = (DefaultTableModel) tablaPostulantes.getModel();
                boolean encontrado = false;
                for(int fila = 0; fila < modelo.getRowCount(); fila++) {
                    String nombreFila = modelo.getValueAt(fila, 0).toString();
                    if(nombreFila.equalsIgnoreCase(nombreCompleto)) {
                        tablaPostulantes.setRowSelectionInterval(fila, fila);
                        tablaPostulantes.scrollRectToVisible(tablaPostulantes.getCellRect(fila, 0, true));
                        encontrado = true;
                        break;
                    }
                }

                if(!encontrado) {
                    JOptionPane.showMessageDialog(null, "El postulante con ese CI no estÃ¡ cargado en la tabla.");
                }

            } else {
                JOptionPane.showMessageDialog(null, "No se encontrÃ³ ningÃºn usuario con ese CI.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al buscar: " + e.getMessage());
        }
 
    }//GEN-LAST:event_pnlBotonBuscarMouseClicked

    /**
     * @param args the command line arguments
     */
    
    
    public DefaultTableModel Postulantes() {
    String[] nombresColumnas = {"Postulante", "Estado de InscripciÃ³n", "Estado de Pago"};
    DefaultTableModel modelo = new DefaultTableModel(null, nombresColumnas);

    String sql = "SELECT CONCAT(u.Nombre, ' ', u.Apellidos) AS NombreCompleto, " +
                 "r.Estado_Documentacion, r.Estado_De_Pago " +
                 "FROM usuario u " +
                 "INNER JOIN registro_documentacion r ON u.ID_Usuario = r.ID_Usuario " +
                 "ORDER BY u.Nombre ASC;";

    try (Connection con = ConecBasePrueba.conectar();
         PreparedStatement pst = con.prepareStatement(sql);
         ResultSet rs = pst.executeQuery()) {
        while (rs.next()) {
            String[] fila = new String[3];
            fila[0] = rs.getString("NombreCompleto");
            int doc = rs.getInt("Estado_Documentacion");
            fila[1] = (doc == 1) ? "Habilitado" : "No habilitado";
            int pago = rs.getInt("Estado_De_Pago");
            fila[2] = (pago == 1) ? "Confirmado" : "Sin confirmar";

            modelo.addRow(fila);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al conectar: " + e.getMessage());
    }

    return modelo;
}




     class ColorRenderer extends DefaultTableCellRenderer {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,boolean isSelected, boolean hasFocus,int row, int column) {

        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        if (value != null) {
            String texto = value.toString();

            if (column == 1) { 
                if (texto.equalsIgnoreCase("Habilitado")) {
                    c.setBackground(Color.GREEN);
                } else {
                    c.setBackground(Color.RED);
                }
                c.setForeground(Color.WHITE);

            } else if (column == 2) {
                if (texto.equalsIgnoreCase("Confirmado")) {
                    c.setBackground(Color.GREEN);
                    c.setForeground(Color.WHITE);
                } else if (texto.equalsIgnoreCase("Sin confirmar")) {
                    c.setBackground(Color.RED);
                    c.setForeground(Color.WHITE);
                } else if (texto.equalsIgnoreCase("Pendiente")) {
                    c.setBackground(Color.YELLOW);
                    c.setForeground(Color.BLACK);
                }
            } else {
                if (isSelected) {
                    c.setBackground(table.getSelectionBackground());
                    c.setForeground(table.getSelectionForeground());
                } else {
                    c.setBackground(table.getBackground());
                    c.setForeground(table.getForeground());
                }
            }
        }

        return c;
    }
}


     private void agregarPlaceholder(JTextField campo, String placeholder) {
    campo.setText(placeholder);
    campo.setForeground(Color.white);

    campo.addFocusListener(new java.awt.event.FocusAdapter() {
        @Override
        public void focusGained(java.awt.event.FocusEvent evt) {
            if (campo.getText().equals(placeholder)) {
                campo.setText("");
                campo.setForeground(Color.white);
            }
        }

        @Override
        public void focusLost(java.awt.event.FocusEvent evt) {
            if (campo.getText().isEmpty()) {
                campo.setText(placeholder);
                campo.setForeground(Color.white);
            }
        }
    });
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
            java.awt.EventQueue.invokeLater(() -> new ControlDePagos().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ingresarCI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnlBotonBuscar;
    private javax.swing.JPanel pnlBotonSolicitar;
    private javax.swing.JTable tablaPostulantes;
    // End of variables declaration//GEN-END:variables
}
